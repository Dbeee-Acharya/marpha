@using marpha.Services
@inject ITransactionService TransactionService
@inject IDebtService DebtService
@inject IAuthenticationService AuthService
@inject NavigationManager navigationManager

<div class="w-100 vh-10 d-flex justify-content-between align-items-center bg-dark text-white">
    <h4>Marpha Money Manager</h4>

    <div class="d-flex gap-5 align-items-end">
        <h5>Balance: @totalTransaction</h5>
        <button class="btn btn-danger btn-outline btn-sm" @onclick="LogoutUser">Logout</button>
    </div>
</div>

@code {
    private decimal totalTransaction;

    private void LogoutUser()
    {
        AuthService.Logout();
        navigationManager.NavigateTo("/login");
    }

    protected override async Task OnInitializedAsync()
    {
        TransactionService.TransactionsUpdated += OnTransactionsUpdated;
        DebtService.DebtsUpdated += OnTransactionsUpdated;
        await SetTotalTransaction();
    }

    private async Task SetTotalTransaction()
    {
        var income = await TransactionService.GetTotalTransactionByTypeAsync("Income");
        var expense = await TransactionService.GetTotalTransactionByTypeAsync("Expense");
        var debt = await DebtService.GetTotalDebtAsync();

        totalTransaction = income - expense + debt;
        StateHasChanged();
    }

    private async void OnTransactionsUpdated()
    {
        await SetTotalTransaction();
    }

    public void Dispose()
    {
        TransactionService.TransactionsUpdated -= OnTransactionsUpdated;
        DebtService.DebtsUpdated -= OnTransactionsUpdated;
    }
}
