@page "/login"
@using marpha.Models
@using marpha.Services
@inject IAuthenticationService authService
@inject NavigationManager navigationManager

@if (authService.IsAuthenticated)
{
    navigationManager.NavigateTo("/");
}

<h3>Login</h3>

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg" style="width: 25rem;">
        <div class="card-body">
            <h3 class="card-title text-center mb-4">Login</h3>
            <form>
                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" id="email" class="form-control" @bind="loginUser.UserEmail" placeholder="Enter your email" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" id="password" class="form-control" @bind="loginUser.UserPassword" placeholder="Enter your password" />
                </div>
                <div class="d-grid">
                    <button type="button" class="btn btn-primary" @onclick="LoginUser">Login</button>
                </div>
                <div class="text-center mt-3">
                    <small class="text-muted">Don't have an account? <a href="/register">Register here</a></small>
                </div>
            </form>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Message))
{
    <p>@Message</p>
}

@code {
    private User loginUser = new User();
    private string Message;

    private async Task LoginUser()
    {
        try
        {
            var loggedIn = await authService.LoginUserAsync(loginUser.UserEmail, loginUser.UserPassword);

            if (loggedIn)
            {
                Message = "Login successful!";
                navigationManager.NavigateTo("/");
            }
            else
            {
                Message = "Invalid email or password. Please try again.";
            }
        }
        catch (Exception ex)
        {
            Message = $"An error occurred during login: {ex.Message}";
        }
    }
}
